{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\13 - Writing more Fliexible Code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport Classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  // console.log(location);\n\n  function changeSortingHandler() {\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n    history.push(`${location.pathname}?sort=${isSortingAscending ? 'asc' : 'dsc'}`);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"lnX36E63fQVKeWsbRx0lhzwlToo=\", false, function () {\n  return [useHistory, useLocation, useRouteMatch];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["React","useHistory","useLocation","useRouteMatch","QuoteItem","Classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","match","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/13 - Writing more Fliexible Code/src/components/quotes/QuoteList.js"],"sourcesContent":["import React from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport Classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  // console.log(location);\n\n\n  function changeSortingHandler(){\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'));\n    history.push(`${location.pathname}?sort=${(isSortingAscending ? 'asc' : 'dsc')}`);\n  }\n  \n  return (\n    <React.Fragment>\n      <div className={Classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={Classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;AAEzE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGd,UAAU,EAAE;EAC5B,MAAMe,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,KAAK,GAAGd,aAAa,EAAE;EAE7B,MAAMe,WAAW,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC;EAExD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAE5D,MAAMC,YAAY,GAAGjB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEc,kBAAkB,CAAC;EACjE;;EAGA,SAASG,oBAAoB,GAAE;IAC7B;IACAT,OAAO,CAACU,IAAI,CAAE,GAAET,QAAQ,CAACU,QAAS,SAASL,kBAAkB,GAAG,KAAK,GAAG,KAAO,EAAC,CAAC;EACnF;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAK,SAAS,EAAEhB,OAAO,CAACsB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEH,oBAAqB;QAAA,oBAAOH,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAClG,eACN;MAAI,SAAS,EAAEhB,OAAO,CAACuB,IAAK;MAAA,UACzBL,YAAY,CAACM,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAAClB,EAAG;QACb,MAAM,EAAEkB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAAClB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAErB,CAAC;AAAC,GAnCIC,SAAS;EAAA,QACGZ,UAAU,EACTC,WAAW,EACdC,aAAa;AAAA;AAAA,KAHvBU,SAAS;AAqCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}