{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\11 - Query Parameters\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport Classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  const sortQuotes = sortQuotes(props.quotes, isSortAscending);\n  console.log(location);\n  function changeSortingHandler() {\n    history.push('/quotes?sort=' + (isSortAscending ? ' desc' : 'asc'));\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Classes.list,\n      children: sortQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["React","useHistory","useLocation","QuoteItem","Classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortAscending","get","console","log","changeSortingHandler","push","sorting","list","map","quote","author","text"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/11 - Query Parameters/src/components/quotes/QuoteList.js"],"sourcesContent":["import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport Classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  \n  const sortQuotes = sortQuotes(props.quotes, isSortAscending);\n  console.log(location);\n\n  function changeSortingHandler(){\n    history.push('/quotes?sort=' + (isSortAscending ? ' desc' : 'asc'));\n  }\n  \n  return (\n    <React.Fragment>\n      <div className={Classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={Classes.list}>\n        {sortQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAE1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAE7C,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGb,UAAU,EAAE;EAC5B,MAAMc,QAAQ,GAAGb,WAAW,EAAE;EAE9B,MAAMc,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,eAAe,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAEzD,MAAMf,UAAU,GAAGA,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEa,eAAe,CAAC;EAC5DE,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,SAASQ,oBAAoB,GAAE;IAC7BT,OAAO,CAACU,IAAI,CAAC,eAAe,IAAIL,eAAe,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;EACrE;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAK,SAAS,EAAEf,OAAO,CAACqB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEF,oBAAqB;QAAA,oBAAOJ,eAAe,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAC/F,eACN;MAAI,SAAS,EAAEf,OAAO,CAACsB,IAAK;MAAA,UACzBrB,UAAU,CAACsB,GAAG,CAAEC,KAAK,iBACpB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACjB,EAAG;QACb,MAAM,EAAEiB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACjB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAErB,CAAC;AAAC,GA/BIC,SAAS;EAAA,QACGX,UAAU,EACTC,WAAW;AAAA;AAAA,KAFxBU,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}