{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\15 - Adding Comments Functionality\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    data: loadedComments,\n    status\n  } = useHttp(getAllComments);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n  if (status === 'completed' && (loadedComments || loadedComments.length > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments were added yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onaddedcomment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"i7SugWqy32ha8ZvahEG/gZeUib0=\", false, function () {\n  return [useHttp, useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useCallback","useParams","LoadingSpinner","NewCommentForm","CommentsList","useHttp","getAllComments","classes","Comments","isAddingComment","setIsAddingComment","sendRequest","data","loadedComments","status","params","quoteId","startAddCommentHandler","addedCommentHandler","comments","length"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/15 - Adding Comments Functionality/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nimport classes from './Comments.module.css';\n\n\n\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const{sendRequest, data:loadedComments, status} = useHttp(getAllComments);\n  const params = useParams();\n  const {quoteId} = params;\n  \n  useEffect(()=>{\n    sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  const addedCommentHandler = useCallback(() =>{\n    sendRequest(quoteId)\n  },[sendRequest,quoteId]);\n\n    let comments;\n\n    if(status === 'pending'){\n      comments = (\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n        );\n    }\n\n    if(status === 'completed' && (loadedComments || loadedComments.length > 0)){\n      comments = <CommentsList comments={loadedComments}/>\n    }\n\n    if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n      comments = (\n        <div className='centered'>\n          <p>No comments were added yet!</p>\n        </div>\n      );\n    }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onaddedcomment={addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAM5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAK;IAACa,WAAW;IAAEC,IAAI,EAACC,cAAc;IAAEC;EAAM,CAAC,GAAGT,OAAO,CAACC,cAAc,CAAC;EACzE,MAAMS,MAAM,GAAGd,SAAS,EAAE;EAC1B,MAAM;IAACe;EAAO,CAAC,GAAGD,MAAM;EAExBhB,SAAS,CAAC,MAAI;IACZY,WAAW,CAACK,OAAO,CAAC;EACtB,CAAC,EAAC,CAACL,WAAW,EAAEK,OAAO,CAAC,CAAC;EAEzB,MAAMC,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,mBAAmB,GAAGlB,WAAW,CAAC,MAAK;IAC3CW,WAAW,CAACK,OAAO,CAAC;EACtB,CAAC,EAAC,CAACL,WAAW,EAACK,OAAO,CAAC,CAAC;EAEtB,IAAIG,QAAQ;EAEZ,IAAGL,MAAM,KAAK,SAAS,EAAC;IACtBK,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAElB;EACL;EAEA,IAAGL,MAAM,KAAK,WAAW,KAAKD,cAAc,IAAIA,cAAc,CAACO,MAAM,GAAG,CAAC,CAAC,EAAC;IACzED,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAEN;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE;EACtD;EAEA,IAAGC,MAAM,KAAK,WAAW,KAAK,CAACD,cAAc,IAAIA,cAAc,CAACO,MAAM,KAAK,CAAC,CAAC,EAAC;IAC5ED,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAkC;MAAA;MAAA;MAAA;IAAA,QAErC;EACH;EACF,oBACE;IAAS,SAAS,EAAEZ,OAAO,CAACY,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEO,OAAQ;MAAC,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,EAC3FC,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAC,GAnDIX,QAAQ;EAAA,QAEsCH,OAAO,EAC1CJ,SAAS;AAAA;AAAA,KAHpBO,QAAQ;AAqDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}