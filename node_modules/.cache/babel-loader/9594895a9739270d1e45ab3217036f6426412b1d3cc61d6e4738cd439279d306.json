{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\14 - Sending and Reciving Data via http\\\\src\\\\pages\\\\DetailQuotes.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning React is fun!'\n}, {\n  id: 'q2',\n  author: 'Maximilian',\n  text: 'Learning React is great!'\n}];\nconst DetailQuotes = function () {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId);\n  const {\n    sendRequest\n  } = useHttp(getSingleQuote);\n  console.log(match);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \" Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailQuotes, \"0XnkIVHzSK5/rbcjGX4QeKkex/g=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n_c = DetailQuotes;\nexport default DetailQuotes;\nvar _c;\n$RefreshReg$(_c, \"DetailQuotes\");","map":{"version":3,"names":["React","Route","useParams","Link","useRouteMatch","useHttp","getSingleQuote","HighlightedQuote","Comments","DUMMY_DATA","id","author","text","DetailQuotes","match","params","quote","find","quoteId","sendRequest","console","log","path","url"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/14 - Sending and Reciving Data via http/src/pages/DetailQuotes.js"],"sourcesContent":["import React from 'react'\r\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport  {getSingleQuote} from '../lib/api';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\n\r\n\r\nconst DUMMY_DATA = [\r\n    { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n    { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\r\n];\r\n\r\nconst DetailQuotes = function (){\r\n    const match = useRouteMatch();\r\n    const params = useParams()\r\n    const quote = DUMMY_DATA.find((quote) => quote.id === params.quoteId);\r\n    const { sendRequest , } = useHttp(getSingleQuote);\r\n    console.log(match);\r\n\r\n    if (!quote) {\r\n        return <p>No quote found!</p>;\r\n      }\r\n\r\n    return ( \r\n    <React.Fragment>\r\n        <HighlightedQuote text={quote.text} author={quote.author} />\r\n            <Route path={`${match.path}`} exact>\r\n            <div className='centered'>\r\n                <Link className='btn--flat' to={`${match.url}/comments`}> Load Comments</Link>\r\n            </div>\r\n            </Route>\r\n            {/* <Route path={`/quotes/${params.quoteId}/comments`}> */}\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n\r\n    </React.Fragment>\r\n    \r\n    );\r\n};\r\n\r\n\r\nexport default DetailQuotes; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAO,YAAY;AAE1C,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,QAAQ,MAAM,iCAAiC;AAAC;AAGvD,MAAMC,UAAU,GAAG,CACf;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAyB,CAAC,EAC3D;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,YAAY;EAAEC,IAAI,EAAE;AAA2B,CAAC,CACvE;AAED,MAAMC,YAAY,GAAG,YAAW;EAAA;EAC5B,MAAMC,KAAK,GAAGV,aAAa,EAAE;EAC7B,MAAMW,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAMc,KAAK,GAAGP,UAAU,CAACQ,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;EACrE,MAAM;IAAEC;EAAc,CAAC,GAAGd,OAAO,CAACC,cAAc,CAAC;EACjDc,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EAElB,IAAI,CAACE,KAAK,EAAE;IACR,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAC/B;EAEF,oBACA,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACJ,IAAK;MAAC,MAAM,EAAEI,KAAK,CAACL;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACxD,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEG,KAAK,CAACQ,IAAK,EAAE;MAAC,KAAK;MAAA,uBACnC;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAER,KAAK,CAACS,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAsB;QAAA;QAAA;QAAA;MAAA;IAC5E;MAAA;MAAA;MAAA;IAAA,QACE,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,WAAW;MAAA,uBAClC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAGrB,CAAC;AAAC,GA3BIT,YAAY;EAAA,QACAT,aAAa,EACZF,SAAS,EAEEG,OAAO;AAAA;AAAA,KAJ/BQ,YAAY;AA8BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}