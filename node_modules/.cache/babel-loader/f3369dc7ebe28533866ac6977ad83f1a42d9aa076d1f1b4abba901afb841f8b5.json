{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\15 - Adding Comments Functionality\\\\src\\\\pages\\\\DetailQuotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailQuotes = function () {\n  _s();\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    data: loadedQuote,\n    status,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \" Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {\n        id: quoteId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailQuotes, \"LKtYwzZbueSX+5oCW0ayxfeKHbc=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n_c = DetailQuotes;\nexport default DetailQuotes;\nvar _c;\n$RefreshReg$(_c, \"DetailQuotes\");","map":{"version":3,"names":["React","useEffect","Route","useParams","Link","useRouteMatch","useHttp","getSingleQuote","HighlightedQuote","Comments","LoadingSpinner","DetailQuotes","match","params","quoteId","sendRequest","data","loadedQuote","status","error","text","author","path","url"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/15 - Adding Comments Functionality/src/pages/DetailQuotes.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport useHttp from '../hooks/use-http';\r\nimport  {getSingleQuote} from '../lib/api';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst DetailQuotes = function (){\r\n    const match = useRouteMatch();\r\n    const params = useParams()\r\n    const {quoteId} = params;\r\n\r\n    const { sendRequest , data:loadedQuote, status, error } = useHttp(getSingleQuote, true);\r\n    \r\n    useEffect(()=>{\r\n        sendRequest(quoteId);\r\n    },[sendRequest, quoteId]);\r\n    \r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner/>\r\n            </div>\r\n        ) \r\n    }\r\n    \r\n    if (error){\r\n        return (\r\n            <p className='centered'>{error}</p>\r\n        );\r\n    }\r\n\r\n    if (!loadedQuote.text){\r\n        return (\r\n            <p>No Quote Found!</p>\r\n        )\r\n    }\r\n\r\n\r\n    return ( \r\n    <React.Fragment>\r\n        <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={`${match.path}`} exact>\r\n            <div className='centered'>\r\n                <Link className='btn--flat' to={`${match.url}/comments`}> Load Comments</Link>\r\n            </div>\r\n            </Route>\r\n            {/* <Route path={`/quotes/${params.quoteId}/comments`}> */}\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments id={quoteId}/>\r\n            </Route>\r\n\r\n    </React.Fragment>\r\n    \r\n    );\r\n};\r\n\r\n\r\nexport default DetailQuotes; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAExE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAO,YAAY;AAE1C,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,cAAc,MAAM,iCAAiC;AAAC;AAE7D,MAAMC,YAAY,GAAG,YAAW;EAAA;EAC5B,MAAMC,KAAK,GAAGP,aAAa,EAAE;EAC7B,MAAMQ,MAAM,GAAGV,SAAS,EAAE;EAC1B,MAAM;IAACW;EAAO,CAAC,GAAGD,MAAM;EAExB,MAAM;IAAEE,WAAW;IAAGC,IAAI,EAACC,WAAW;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGb,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAEvFN,SAAS,CAAC,MAAI;IACVc,WAAW,CAACD,OAAO,CAAC;EACxB,CAAC,EAAC,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAEzB,IAAII,MAAM,KAAK,SAAS,EAAE;IACtB,oBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACf;EAEd;EAEA,IAAIC,KAAK,EAAC;IACN,oBACI;MAAG,SAAS,EAAC,UAAU;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAE3C;EAEA,IAAI,CAACF,WAAW,CAACG,IAAI,EAAC;IAClB,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAE9B;EAGA,oBACA,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX,QAAC,gBAAgB;MAAC,IAAI,EAAEH,WAAW,CAACG,IAAK;MAAC,MAAM,EAAEH,WAAW,CAACI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE,QAAC,KAAK;MAAC,IAAI,EAAG,GAAET,KAAK,CAACU,IAAK,EAAE;MAAC,KAAK;MAAA,uBACnC;QAAK,SAAS,EAAC,UAAU;QAAA,uBACrB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAsB;QAAA;QAAA;QAAA;MAAA;IAC5E;MAAA;MAAA;MAAA;IAAA,QACE,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAAW;MAAA,uBAClC,QAAC,QAAQ;QAAC,EAAE,EAAER;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAGrB,CAAC;AAAC,GAhDIH,YAAY;EAAA,QACAN,aAAa,EACZF,SAAS,EAGkCG,OAAO;AAAA;AAAA,KAL/DK,YAAY;AAmDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}