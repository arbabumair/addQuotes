{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arbab Umair\\\\Desktop\\\\React-course\\\\Section 20 React Router\\\\11 - Project\\\\15 - Adding Comments Functionality\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport classes from './Comments.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {\n    sendRequest,\n    data,\n    status,\n    error\n  } = useHttp(getAllComments);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n  if (status === 'complete') {}\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onaddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"xPLm1lIMwLd6IqW+wrAUX98x0xY=\", false, function () {\n  return [useHttp, useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","LoadingSpinner","NewCommentForm","useHttp","getAllComments","classes","Comments","isAddingComment","setIsAddingComment","sendRequest","data","status","error","params","quoteId","startAddCommentHandler","addedCommentHandler","comments"],"sources":["C:/Users/Arbab Umair/Desktop/React-course/Section 20 React Router/11 - Project/15 - Adding Comments Functionality/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport NewCommentForm from './NewCommentForm';\n\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nimport classes from './Comments.module.css';\n\n\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const{sendRequest, data, status, error} = useHttp(getAllComments);\n  const params = useParams();\n  const {quoteId} = params;\n  \n  useEffect(()=>{\n    sendRequest(quoteId);\n  },[sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  const addedCommentHandler = () =>{}\n\n    let comments;\n    if(status === 'pending'){\n      comments = (\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n        );\n    }\n    if(status === 'complete'){\n      \n    }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onaddedComment={addedCommentHandler}/>}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAK5C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAK;IAACW,WAAW;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGT,OAAO,CAACC,cAAc,CAAC;EACjE,MAAMS,MAAM,GAAGb,SAAS,EAAE;EAC1B,MAAM;IAACc;EAAO,CAAC,GAAGD,MAAM;EAExBd,SAAS,CAAC,MAAI;IACZU,WAAW,CAACK,OAAO,CAAC;EACtB,CAAC,EAAC,CAACL,WAAW,CAAC,CAAC;EAEhB,MAAMM,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMQ,mBAAmB,GAAG,MAAK,CAAC,CAAC;EAEjC,IAAIC,QAAQ;EACZ,IAAGN,MAAM,KAAK,SAAS,EAAC;IACtBM,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAElB;EACL;EACA,IAAGN,MAAM,KAAK,UAAU,EAAC,CAEzB;EACF,oBACE;IAAS,SAAS,EAAEN,OAAO,CAACY,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACV,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEO,OAAQ;MAAC,cAAc,EAAEE;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5F;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd,CAAC;AAAC,GAvCIV,QAAQ;EAAA,QAE8BH,OAAO,EAClCH,SAAS;AAAA;AAAA,KAHpBM,QAAQ;AAyCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}